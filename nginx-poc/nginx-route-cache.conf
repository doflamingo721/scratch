user  nginx;
worker_processes  auto;

# Send error logs to syslog server
error_log syslog:server=<syslog_server_ip>:<syslog_port>,facility=local7,tag=nginx_error notice;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Custom log format
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    # Send access logs to syslog server
    access_log syslog:server=<syslog_server_ip>:<syslog_port>,facility=local7,tag=nginx_access main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    include /etc/nginx/conf.d/*.conf;

    # Caching configuration
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=my_cache:10m max_size=10g inactive=60m use_temp_path=off;

    # Upstream block for backend server
    upstream backend_app {
        server <backendIP>:80;
    }

    # Server block to handle incoming requests and forward them to the backend
    server {
        listen 80;
        server_name _;  # Catch-all server name or specify a domain

        location / {
            proxy_pass http://backend_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Caching settings for this location block
            proxy_cache my_cache;
            proxy_cache_bypass $cookie_nocache $arg_nocache $arg_comment;
            proxy_no_cache $cookie_nocache $arg_nocache $arg_comment;
            proxy_cache_valid 200 302 60m;
            proxy_cache_valid 404 1m;
            add_header X-Cache-Status $upstream_cache_status;
        }
    }
}

# TCP/UDP proxy and load balancing block
#
#stream {
    # Example configuration for TCP load balancing

    #upstream stream_backend {
    #    zone tcp_servers 64k;
    #    server backend1.example.com:12345;
    #    server backend2.example.com:12345;
    #}

    #server {
    #    listen 12345;
    #    status_zone tcp_server;
    #    proxy_pass stream_backend;
    #}
#}

# NGINX Plus Usage Reporting
#
# By default, every 30 minutes, NGINX Plus will send usage information
# to NGINX Instance Manager, resolved by a "nginx-mgmt.local" DNS entry.
# Alternate settings can be configured by uncommenting the "mgmt" block
# and optional directives.
#
#mgmt {
    #usage_report endpoint=nginx-mgmt.local interval=30m;
    #resolver DNS_IP;

    #uuid_file /var/lib/nginx/nginx.id;

    #ssl_protocols TLSv1.2 TLSv1.3;
    #ssl_ciphers DEFAULT;

    #ssl_certificate          client.pem;
    #ssl_certificate_key      client.key;

    #ssl_trusted_certificate  trusted_ca_cert.crt;
    #ssl_verify               on;
    #ssl_verify_depth         2;
#}
